name: ci/cd pipeline

on: 
  push:
    branches:
      - main
    paths-ignore:
      - "kubernetes/**"
  pull_request:
    branches:
      - main

jobs:
  docker:
    name: Docker build and push
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io
    outputs:
      backend_image_tag: ${{ steps.backend_set_output.outputs.image_tag }}
      frontend_image_tag: ${{ steps.frontend_set_output.outputs.image_tag }}
      admin_image_tag: ${{ steps.admin_set_output.outputs.image_tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set lowercase image name
        id: lower
        run: echo "image_name=${GITHUB_REPOSITORY,,}" >> $GITHUB_OUTPUT
        shell: bash

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          image: ${{ env.REGISTRY }}/${{ steps.lower.outputs.image_name }}
          tags: |
            type=sha,format=long
            type=ref,event=branch
            latest

      # Build backend image
      - name: Build backend Docker image
        uses: docker/build-push-action@v5
        id: backend_build
        with:
          context: ./backend
          push: true
          tags: ${{ env.REGISTRY }}/${{ steps.lower.outputs.image_name }}-backend:latest

      - name: Set backend image tag output
        id: backend_set_output
        run: echo "image_tag=latest" >> $GITHUB_OUTPUT

      # Build frontend image
      - name: Build frontend Docker image
        uses: docker/build-push-action@v5
        id: frontend_build
        with:
          context: ./frontend
          push: true
          tags: ${{ env.REGISTRY }}/${{ steps.lower.outputs.image_name }}-frontend:latest

      - name: Set frontend image tag output
        id: frontend_set_output
        run: echo "image_tag=latest" >> $GITHUB_OUTPUT

      # Build admin image
      - name: Build admin Docker image
        uses: docker/build-push-action@v5
        id: admin_build
        with:
          context: ./admin
          push: true
          tags: ${{ env.REGISTRY }}/${{ steps.lower.outputs.image_name }}-admin:latest

      - name: Set admin image tag output
        id: admin_set_output
        run: echo "image_tag=latest" >> $GITHUB_OUTPUT

  update-k8s:
    name: Update Kubernetes Deployment
    runs-on: ubuntu-latest
    needs: [docker]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.TOKEN }}

      - name: Set lowercase repo name
        id: lower
        run: echo "repo_name=${GITHUB_REPOSITORY,,}" >> $GITHUB_OUTPUT
        shell: bash

      - name: Setup Git config
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Update backend deployment image
        run: |
          REGISTRY=${{ env.REGISTRY }}
          REPO_NAME=${{ steps.lower.outputs.repo_name }}
          IMAGE="${REGISTRY}/${REPO_NAME}-backend:latest"
          sed -i "s|image: .*backend.*|image: ${IMAGE}|g" kubernetes/backend-deployment.yaml
          echo "Updated backend deployment to image: ${IMAGE}"
          grep -A 1 "image:" kubernetes/backend-deployment.yaml

      - name: Update frontend deployment image
        run: |
          REGISTRY=${{ env.REGISTRY }}
          REPO_NAME=${{ steps.lower.outputs.repo_name }}
          IMAGE="${REGISTRY}/${REPO_NAME}-frontend:latest"
          sed -i "s|image: .*frontend.*|image: ${IMAGE}|g" kubernetes/frontend-deployment.yaml
          echo "Updated frontend deployment to image: ${IMAGE}"
          grep -A 1 "image:" kubernetes/frontend-deployment.yaml

      - name: Update admin deployment image
        run: |
          REGISTRY=${{ env.REGISTRY }}
          REPO_NAME=${{ steps.lower.outputs.repo_name }}
          IMAGE="${REGISTRY}/${REPO_NAME}-admin:latest"
          sed -i "s|image: .*admin.*|image: ${IMAGE}|g" kubernetes/admin-deployment.yaml
          echo "Updated admin deployment to image: ${IMAGE}"
          grep -A 1 "image:" kubernetes/admin-deployment.yaml

      # Optional: Uncomment to auto-commit deployment updates
      - name: Commit and push changes
        run: |
          git add kubernetes/backend-deployment.yaml kubernetes/frontend-deployment.yaml kubernetes/admin-deployment.yaml
          git commit -m "Update deployment images [skip ci]" || echo "No changes to commit"
          git push
